/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  FLPCrowdSale,
  FLPCrowdSaleInterface,
} from "../../../contracts/FLPCrowndsalce.sol/FLPCrowdSale";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bnb_rate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "usdt_rate",
        type: "uint256",
      },
      {
        internalType: "address payable",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "icotoken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BuyTokenByBNB",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "BuyTokenByUSDT",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "SetBNBRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newRate",
        type: "uint256",
      },
    ],
    name: "SetUSDTRate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IERC20",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "SetUSDTToken",
    type: "event",
  },
  {
    inputs: [],
    name: "BNB_rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDT_rate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_wallet",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "buyTokenByBNB",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "USDTAmount",
        type: "uint256",
      },
    ],
    name: "buyTokenByUSDT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "BNBAmount",
        type: "uint256",
      },
    ],
    name: "getTokenAmountBNB",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "USDTAmount",
        type: "uint256",
      },
    ],
    name: "getTokenAmountUSDT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "new_rate",
        type: "uint256",
      },
    ],
    name: "setBNBRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "new_rate",
        type: "uint256",
      },
    ],
    name: "setUSDTRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token_address",
        type: "address",
      },
    ],
    name: "setUSDTToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdtToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawErc20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001fa238038062001fa28339818101604052810190620000379190620002bb565b620000576200004b620000f160201b60201c565b620000f960201b60201c565b836002819055508260038190555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050506200032d565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b620001d781620001c2565b8114620001e357600080fd5b50565b600081519050620001f781620001cc565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200022a82620001fd565b9050919050565b6200023c816200021d565b81146200024857600080fd5b50565b6000815190506200025c8162000231565b92915050565b60006200026f82620001fd565b9050919050565b6000620002838262000262565b9050919050565b620002958162000276565b8114620002a157600080fd5b50565b600081519050620002b5816200028a565b92915050565b60008060008060808587031215620002d857620002d7620001bd565b5b6000620002e887828801620001e6565b9450506020620002fb87828801620001e6565b93505060406200030e878288016200024b565b92505060606200032187828801620002a4565b91505092959194509250565b611c65806200033d6000396000f3fe6080604052600436106100fe5760003560e01c8063610757e411610095578063a98ad46c11610064578063a98ad46c146102b6578063acb03d43146102e1578063c5d156511461031e578063f2fde38b14610347578063fc0c546a14610370576100fe565b8063610757e41461022057806366e226bd1461024b578063715018a6146102745780638da5cb5b1461028b576100fe565b806331927737116100d157806331927737146101bd5780633ccfd60b146101c75780633e3f2359146101de578063592a00e4146101f5576100fe565b8063157fc821146101035780631832d8b61461012e5780631b4622d61461016b5780632be8629914610194575b600080fd5b34801561010f57600080fd5b5061011861039b565b60405161012591906113f2565b60405180910390f35b34801561013a57600080fd5b506101556004803603810190610150919061143e565b6103a1565b60405161016291906113f2565b60405180910390f35b34801561017757600080fd5b50610192600480360381019061018d919061143e565b6103b8565b005b3480156101a057600080fd5b506101bb60048036038101906101b6919061143e565b610475565b005b6101c5610532565b005b3480156101d357600080fd5b506101dc610792565b005b3480156101ea57600080fd5b506101f3610857565b005b34801561020157600080fd5b5061020a610a11565b60405161021791906113f2565b60405180910390f35b34801561022c57600080fd5b50610235610a17565b60405161024291906114ac565b60405180910390f35b34801561025757600080fd5b50610272600480360381019061026d9190611517565b610a3d565b005b34801561028057600080fd5b50610289610b34565b005b34801561029757600080fd5b506102a0610bbc565b6040516102ad9190611553565b60405180910390f35b3480156102c257600080fd5b506102cb610be5565b6040516102d891906115cd565b60405180910390f35b3480156102ed57600080fd5b506103086004803603810190610303919061143e565b610c0b565b60405161031591906113f2565b60405180910390f35b34801561032a57600080fd5b506103456004803603810190610340919061143e565b610c22565b005b34801561035357600080fd5b5061036e60048036038101906103699190611614565b610e64565b005b34801561037c57600080fd5b50610385610f5b565b60405161039291906115cd565b60405180910390f35b60025481565b6000600354826103b19190611670565b9050919050565b6103c0610f81565b73ffffffffffffffffffffffffffffffffffffffff166103de610bbc565b73ffffffffffffffffffffffffffffffffffffffff1614610434576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042b9061170f565b60405180910390fd5b806003819055507fbdaa37e3f6679857d8c3e80d172bd45af732a8658cf1d690c81ca96f5a443b5b8160405161046a91906113f2565b60405180910390a150565b61047d610f81565b73ffffffffffffffffffffffffffffffffffffffff1661049b610bbc565b73ffffffffffffffffffffffffffffffffffffffff16146104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e89061170f565b60405180910390fd5b806002819055507fb0cc740bbbfcd5af22ee3956c6b44d2d6f499e2a86cb11d915fcce88dca2113a8160405161052791906113f2565b60405180910390a150565b6000349050600061054282610c0b565b905060008111610587576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057e9061177b565b60405180910390fd5b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105e39190611553565b602060405180830381865afa158015610600573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062491906117b0565b1015610665576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065c90611829565b60405180910390fd5b813373ffffffffffffffffffffffffffffffffffffffff163110156106bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b690611829565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015610727573d6000803e3d6000fd5b50610755600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383610f89565b7ff695091b71a5c3ea41510251da89a66470bbcf1ee118f820a1bab8739e29ea503382604051610786929190611849565b60405180910390a15050565b61079a610f81565b73ffffffffffffffffffffffffffffffffffffffff166107b8610bbc565b73ffffffffffffffffffffffffffffffffffffffff161461080e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108059061170f565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610854573d6000803e3d6000fd5b50565b61085f610f81565b73ffffffffffffffffffffffffffffffffffffffff1661087d610bbc565b73ffffffffffffffffffffffffffffffffffffffff16146108d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ca9061170f565b60405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161096d9190611553565b602060405180830381865afa15801561098a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ae91906117b0565b6040518363ffffffff1660e01b81526004016109cb929190611849565b6020604051808303816000875af11580156109ea573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0e91906118aa565b50565b60035481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610a45610f81565b73ffffffffffffffffffffffffffffffffffffffff16610a63610bbc565b73ffffffffffffffffffffffffffffffffffffffff1614610ab9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab09061170f565b60405180910390fd5b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f43036333e58a6f9255617b54ec9f5825590c8ee695a222dc35e5001927f0715181604051610b2991906115cd565b60405180910390a150565b610b3c610f81565b73ffffffffffffffffffffffffffffffffffffffff16610b5a610bbc565b73ffffffffffffffffffffffffffffffffffffffff1614610bb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba79061170f565b60405180910390fd5b610bba600061100f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060025482610c1b9190611670565b9050919050565b6000610c2d826103a1565b9050813373ffffffffffffffffffffffffffffffffffffffff16311015610c89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8090611829565b60405180910390fd5b60008111610ccc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc39061177b565b60405180910390fd5b80600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d289190611553565b602060405180830381865afa158015610d45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d6991906117b0565b1015610daa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da190611829565b60405180910390fd5b610dfa600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1633600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856110d3565b610e27600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163383610f89565b7f5c0161fad3fa89cfebd4a74115d9f81661cdd1b9008d05a238ea9d65088e20643382604051610e58929190611849565b60405180910390a15050565b610e6c610f81565b73ffffffffffffffffffffffffffffffffffffffff16610e8a610bbc565b73ffffffffffffffffffffffffffffffffffffffff1614610ee0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ed79061170f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4690611949565b60405180910390fd5b610f588161100f565b50565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b61100a8363a9059cbb60e01b8484604051602401610fa8929190611849565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061115c565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611156846323b872dd60e01b8585856040516024016110f493929190611969565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061115c565b50505050565b60006111be826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166112239092919063ffffffff16565b905060008151111561121e57808060200190518101906111de91906118aa565b61121d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121490611a12565b60405180910390fd5b5b505050565b6060611232848460008561123b565b90509392505050565b606082471015611280576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127790611aa4565b60405180910390fd5b6112898561134f565b6112c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112bf90611b10565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516112f19190611ba1565b60006040518083038185875af1925050503d806000811461132e576040519150601f19603f3d011682016040523d82523d6000602084013e611333565b606091505b5091509150611343828286611372565b92505050949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b60608315611382578290506113d2565b6000835111156113955782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c99190611c0d565b60405180910390fd5b9392505050565b6000819050919050565b6113ec816113d9565b82525050565b600060208201905061140760008301846113e3565b92915050565b600080fd5b61141b816113d9565b811461142657600080fd5b50565b60008135905061143881611412565b92915050565b6000602082840312156114545761145361140d565b5b600061146284828501611429565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006114968261146b565b9050919050565b6114a68161148b565b82525050565b60006020820190506114c1600083018461149d565b92915050565b60006114d28261146b565b9050919050565b60006114e4826114c7565b9050919050565b6114f4816114d9565b81146114ff57600080fd5b50565b600081359050611511816114eb565b92915050565b60006020828403121561152d5761152c61140d565b5b600061153b84828501611502565b91505092915050565b61154d816114c7565b82525050565b60006020820190506115686000830184611544565b92915050565b6000819050919050565b600061159361158e6115898461146b565b61156e565b61146b565b9050919050565b60006115a582611578565b9050919050565b60006115b78261159a565b9050919050565b6115c7816115ac565b82525050565b60006020820190506115e260008301846115be565b92915050565b6115f1816114c7565b81146115fc57600080fd5b50565b60008135905061160e816115e8565b92915050565b60006020828403121561162a5761162961140d565b5b6000611638848285016115ff565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061167b826113d9565b9150611686836113d9565b9250828202611694816113d9565b915082820484148315176116ab576116aa611641565b5b5092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006116f96020836116b2565b9150611704826116c3565b602082019050919050565b60006020820190508181036000830152611728816116ec565b9050919050565b7f416d6f756e74206973207a65726f000000000000000000000000000000000000600082015250565b6000611765600e836116b2565b91506117708261172f565b602082019050919050565b6000602082019050818103600083015261179481611758565b9050919050565b6000815190506117aa81611412565b92915050565b6000602082840312156117c6576117c561140d565b5b60006117d48482850161179b565b91505092915050565b7f496e73756666696369656e74206163636f756e742062616c616e636500000000600082015250565b6000611813601c836116b2565b915061181e826117dd565b602082019050919050565b6000602082019050818103600083015261184281611806565b9050919050565b600060408201905061185e6000830185611544565b61186b60208301846113e3565b9392505050565b60008115159050919050565b61188781611872565b811461189257600080fd5b50565b6000815190506118a48161187e565b92915050565b6000602082840312156118c0576118bf61140d565b5b60006118ce84828501611895565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006119336026836116b2565b915061193e826118d7565b604082019050919050565b6000602082019050818103600083015261196281611926565b9050919050565b600060608201905061197e6000830186611544565b61198b6020830185611544565b61199860408301846113e3565b949350505050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b60006119fc602a836116b2565b9150611a07826119a0565b604082019050919050565b60006020820190508181036000830152611a2b816119ef565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000611a8e6026836116b2565b9150611a9982611a32565b604082019050919050565b60006020820190508181036000830152611abd81611a81565b9050919050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000611afa601d836116b2565b9150611b0582611ac4565b602082019050919050565b60006020820190508181036000830152611b2981611aed565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015611b64578082015181840152602081019050611b49565b60008484015250505050565b6000611b7b82611b30565b611b858185611b3b565b9350611b95818560208601611b46565b80840191505092915050565b6000611bad8284611b70565b915081905092915050565b600081519050919050565b6000601f19601f8301169050919050565b6000611bdf82611bb8565b611be981856116b2565b9350611bf9818560208601611b46565b611c0281611bc3565b840191505092915050565b60006020820190508181036000830152611c278184611bd4565b90509291505056fea26469706673582212203a290aaf8ac11c00cb8d0ded2e2d2d54cb3cbdc01c377b0680289e7a3a39cef864736f6c63430008110033";

type FLPCrowdSaleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FLPCrowdSaleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FLPCrowdSale__factory extends ContractFactory {
  constructor(...args: FLPCrowdSaleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    bnb_rate: PromiseOrValue<BigNumberish>,
    usdt_rate: PromiseOrValue<BigNumberish>,
    wallet: PromiseOrValue<string>,
    icotoken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FLPCrowdSale> {
    return super.deploy(
      bnb_rate,
      usdt_rate,
      wallet,
      icotoken,
      overrides || {}
    ) as Promise<FLPCrowdSale>;
  }
  override getDeployTransaction(
    bnb_rate: PromiseOrValue<BigNumberish>,
    usdt_rate: PromiseOrValue<BigNumberish>,
    wallet: PromiseOrValue<string>,
    icotoken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      bnb_rate,
      usdt_rate,
      wallet,
      icotoken,
      overrides || {}
    );
  }
  override attach(address: string): FLPCrowdSale {
    return super.attach(address) as FLPCrowdSale;
  }
  override connect(signer: Signer): FLPCrowdSale__factory {
    return super.connect(signer) as FLPCrowdSale__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FLPCrowdSaleInterface {
    return new utils.Interface(_abi) as FLPCrowdSaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FLPCrowdSale {
    return new Contract(address, _abi, signerOrProvider) as FLPCrowdSale;
  }
}
